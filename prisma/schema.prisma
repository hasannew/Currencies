generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employees {
  id         String    @id @default(cuid())
  first_name String?   @db.VarChar(50)
  last_name  String?   @db.VarChar(50)
  email      String?   @db.VarChar(100)
  type             String    @default("assistant")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}
model privilges {
  id         String    @id @default(cuid())
  userID String?   @db.VarChar(50)
  name  String?   @db.VarChar(50)
  details      String?   @db.VarChar(100)
  date           DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  User User[]
}
model User {
  id               String    @id @default(cuid())
  email            String    @unique
  username         String    @unique
  password         String
  token            String?
  tokenExpiracy    DateTime?
  isVerified       Boolean   @default(false)
  verificationDate DateTime?
  type             String    @default("customer")
  privilages       privilges[]
}

model OAuthUser {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  provider     String
  refreshToken String?   @db.Text
  accessToken  String?   @db.Text
  tokenExpiry  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  type         String    @default("customer")
}

model currency {
  id             String     @id @default(cuid())
  name           String?    @db.VarChar(50)
  store_name     String?    @db.VarChar(50)
  state          String?    @db.VarChar(50)
  city           String?    @db.VarChar(50)
  sale_price     Float?     @default(0)
  purchase_price Float?     @default(0)
  date           DateTime?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime?  @updatedAt
  bulletin       bulletin[]
}

model schedule {
  id         String     @id @default(cuid())
  userID     String?
  storeid    String? @unique
  opening_time String?
  closing_time String?
  sunday       Boolean?
  monday       Boolean?
  tuesday      Boolean?
  wednesday    Boolean?
  thursday     Boolean?
  friday       Boolean?
  saturday     Boolean?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime?  @updatedAt
  store   store?  @relation(fields: [storeid], references: [id])
  
}
model store {
  id         String     @id @default(cuid())
  userID     String?
  name       String?    @db.VarChar(50)
  state      String?    @db.VarChar(50)
  city       String?    @db.VarChar(50)
  address    String?    @db.VarChar(50)
  email      String?    @db.VarChar(100)
  phone      String?    @db.VarChar(100)
  status     String?    @default("inactive")
  currencies String?    @db.VarChar(100)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime?  @updatedAt
  bulletin   bulletin[]
  schedule schedule?
}

model offer {
  id        String    @id @default(cuid())
  currency  String?   @db.VarChar(100)
  price     Float?
  date      DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model bulletin {
  id        String     @id @default(cuid())
  storeid   String?
  date      DateTime?
  state     String?    @db.VarChar(50)
  city      String?    @db.VarChar(50)
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  store     store?     @relation(fields: [storeid], references: [id])
  products  currency[]

  @@index([storeid])
}

model price {
  id                        String    @id @default(cuid())
  name                      String
  date                      DateTime?
  sale_price                Float     @default(0)
  sale_std                  Float     @default(0)
  purchase_price            Float     @default(0)
  purchase_std              Float     @default(0)
  sale_percentageChange     Float?    @default(0)
  purchase_percentageChange Float?    @default(0)
  max_sale_price            Float?    @default(0)
  min_sale_price            Float?    @default(0)
  max_purchase_price        Float?    @default(0)
  min_purchase_price        Float?    @default(0)
  state                     String?   @db.VarChar(50)
  city                      String?   @db.VarChar(50)
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime? @updatedAt
}

model favorite {
  id         String     @id @default(cuid())
  name String? @db.VarChar(50)
  userid String @db.VarChar(50)
  date  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime? @updatedAt

}

model issue {
  id         String     @id @default(cuid())
  email String? @db.VarChar(50)
  topic String? @db.VarChar(50)
  message String? @db.VarChar(50)
  userid String @db.VarChar(50)
  date  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime? @updatedAt

}